{"version":3,"sources":["webpack://lib/webpack/bootstrap","webpack://lib/./src/solvers/cost.js","webpack://lib/./src/solvers/heuristic-construction/furthestInsertion.worker.js","webpack://lib/./src/solvers/makeSolver.js","webpack://lib/./src/store/actions.js","webpack://lib/./src/store/emitCustomEvent.js"],"names":["distance","pt1","pt2","lng1","lat1","lng2","lat2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","pathCost","path","slice","map","point","idx","reduce","a","b","counterClockWise","p","q","r","intersects","c","d","setDifference","setA","setB","ret","Set","forEach","delete","rotateToStartingPoint","startingPoint","startIdx","findIndex","unshift","splice","length","wrapSolver","solver","args","self","postMessage","actions","makeSolver","run","solverConfig","detailLevel","delay","fullSpeed","paused","setBestPath","setEvaluatingPaths","getPaths","level","paths","cost","setEvaluatingPath","getPath","waitPause","Promise","resolve","setTimeout","sleep","duration","onmessage","data","action","type","evaluatingDetailLevel","points","Error","SET_VIEWPORT_STATE","RESET_EVALUATING_STATE","RESET_BEST_PATH_STATE","SET_ALGORITHM","SET_DELAY","SET_EVALUATING_DETAIL_LEVEL","SET_SHOW_BEST_PATH","START_SOLVING","GO_FULL_SPEED","PAUSE","UNPAUSE","STOP_SOLVING","SET_BEST_PATH","SET_EVALUATING_PATHS","START_DEFINING_POINTS","ADD_DEFINED_POINT","STOP_DEFINING_POINTS","SET_POINT_COUNT","SET_POINTS","SET_DEFAULT_MAP","TOGGLE_SITE_INFO_OPEN","TOGGLE_ALG_INFO_OPEN","getRandomPoint","max","min","random","toggleSiteInfoOpen","toggleAlgInfoOpen","setViewportState","viewport","resetEvaluatingStateAction","resetBestPathStateAction","setAlgorithmAction","algorithm","defaults","startSolvingAction","stopSolvingAction","setAlgorithm","dispatch","setDelay","setEvaluatingDetailLevel","setShowBestPath","show","resetSolverState","stopSolving","startSolving","getState","pointCount","gtmEmit","event","goFullSpeed","pause","unpause","setDefaultMapAction","setPointsAction","setPointCountAction","count","startDefiningPointsAction","startDefiningPoints","addDefinedPoint","stopDefiningPoints","setPointCount","randomizePoints","bounds","top","bottom","left","right","Array","from","_","setDefaultMap","ev","window","dataLayer","push","console","log"],"mappings":"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","file":"afb43cd5bb349c1c80b9.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/solvers/heuristic-construction/furthestInsertion.worker.js\");\n","// haversine great circle distance\nexport const distance = (pt1, pt2) => {\n  const [lng1, lat1] = pt1;\n  const [lng2, lat2] = pt2;\n  if (lat1 === lat2 && lng1 === lng2) {\n    return 0;\n  }\n\n  var radlat1 = (Math.PI * lat1) / 180;\n  var radlat2 = (Math.PI * lat2) / 180;\n\n  var theta = lng1 - lng2;\n  var radtheta = (Math.PI * theta) / 180;\n\n  var dist =\n    Math.sin(radlat1) * Math.sin(radlat2) +\n    Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n  if (dist > 1) {\n    dist = 1;\n  }\n  dist = Math.acos(dist);\n  dist = (dist * 180) / Math.PI;\n  return dist * 60 * 1.1515 * 1.609344;\n};\n\nexport const pathCost = path => {\n  return path\n    .slice(0, -1)\n    .map((point, idx) => distance(point, path[idx + 1]))\n    .reduce((a, b) => a + b, 0);\n};\n\nexport const counterClockWise = (p, q, r) => {\n  return (q[0] - p[0]) * (r[1] - q[1]) < (q[1] - p[1]) * (r[0] - q[0]);\n};\n\nexport const intersects = (a, b, c, d) => {\n  return (\n    counterClockWise(a, c, d) !== counterClockWise(b, c, d) &&\n    counterClockWise(a, b, c) !== counterClockWise(a, b, d)\n  );\n};\n\nexport const setDifference = (setA, setB) => {\n  const ret = new Set(setA);\n  setB.forEach(p => {\n    ret.delete(p);\n  });\n  return ret;\n};\n\nexport const rotateToStartingPoint = (path, startingPoint) => {\n  const startIdx = path.findIndex(p => p === startingPoint);\n  path.unshift(...path.splice(startIdx, path.length));\n};\n","/* eslint-disable no-restricted-globals */\nimport makeSolver from \"../makeSolver\";\nimport { pathCost, distance } from \"../cost\";\n\nconst furthestInsertion = async points => {\n  // from the starting point\n  const path = [points.shift()];\n\n  //\n  // INITIALIZATION - go to the nearest point first\n  //\n  points.sort((a, b) => distance(path[0], b) - distance(path[0], a));\n  path.push(points.pop());\n\n  self.setEvaluatingPaths(() => ({\n    paths: [{ path }],\n    cost: pathCost(path)\n  }));\n\n  await self.sleep();\n\n  while (points.length > 0) {\n    //\n    // SELECTION - furthest point from the path\n    //\n    let [selectedDistance, selectedIdx] = [0, null];\n    for (const [freePointIdx, freePoint] of points.entries()) {\n      // find the minimum distance to the path for freePoint\n      let [bestCostToPath, costToPathIdx] = [Infinity, null];\n      for (const pathPoint of path) {\n        const dist = distance(freePoint, pathPoint);\n        if (dist < bestCostToPath) {\n          [bestCostToPath, costToPathIdx] = [dist, freePointIdx];\n        }\n      }\n\n      // if this point is further from the path than the currently selected\n      if (bestCostToPath > selectedDistance) {\n        [selectedDistance, selectedIdx] = [bestCostToPath, costToPathIdx];\n      }\n    }\n\n    // get the next point to add\n    const [nextPoint] = points.splice(selectedIdx, 1);\n\n    //\n    // INSERTION - find the insertion spot that minimizes distance\n    //\n    let [bestCost, bestIdx] = [Infinity, null];\n    for (let i = 1; i < path.length; i++) {\n      const insertionCost = pathCost([path[i - 1], nextPoint, path[i]]);\n      if (insertionCost < bestCost) {\n        [bestCost, bestIdx] = [insertionCost, i];\n      }\n    }\n    path.splice(bestIdx, 0, nextPoint);\n\n    self.setEvaluatingPaths(() => ({\n      paths: [{ path }],\n      cost: pathCost(path)\n    }));\n\n    await self.sleep();\n  }\n\n  // return to start after visiting all other points\n  path.push(path[0]);\n  const cost = pathCost(path);\n\n  self.setEvaluatingPaths(() => ({\n    paths: [{ path }],\n    cost\n  }));\n  await self.sleep();\n\n  self.setBestPath(path, cost);\n};\n\nmakeSolver(furthestInsertion);\n","/* eslint-disable no-restricted-globals */\nimport * as actions from \"../store/actions\";\n\nconst wrapSolver = solver => async (...args) => {\n  await solver(...args);\n  self.postMessage(actions.stopSolvingAction());\n};\n\nexport const makeSolver = solver => {\n  const run = wrapSolver(solver);\n\n  self.solverConfig = {\n    detailLevel: 0,\n    delay: 10,\n    fullSpeed: false,\n    paused: false\n  };\n\n  self.setBestPath = (...args) => {\n    self.postMessage(actions.setBestPath(...args));\n  };\n\n  self.setEvaluatingPaths = (getPaths, level = 1) => {\n    if (self.solverConfig.detailLevel >= level) {\n      const { paths, cost } = getPaths();\n      self.postMessage(actions.setEvaluatingPaths(paths, cost));\n    }\n  };\n\n  self.setEvaluatingPath = (getPath, level = 1) => {\n    if (self.solverConfig.detailLevel >= level) {\n      const { path, cost } = getPath();\n      self.postMessage(actions.setEvaluatingPath(path, cost));\n    }\n  };\n\n  self.waitPause = async () => {\n    while (self.solverConfig.paused) {\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n  };\n\n  self.sleep = async () => {\n    if (self.solverConfig.paused) {\n      return await self.waitPause();\n    }\n    const duration = self.solverConfig.fullSpeed\n      ? 0\n      : self.solverConfig.delay || 10;\n    return new Promise(resolve => {\n      setTimeout(resolve, duration);\n    });\n  };\n\n  self.onmessage = async ({ data: action }) => {\n    switch (action.type) {\n      case actions.START_SOLVING:\n        self.solverConfig.delay = action.delay;\n        self.solverConfig.detailLevel = action.evaluatingDetailLevel;\n        self.solverConfig.fullSpeed = action.fullSpeed;\n        run(action.points);\n        break;\n\n      case actions.SET_DELAY:\n        self.solverConfig.delay = action.delay;\n        break;\n\n      case actions.SET_EVALUATING_DETAIL_LEVEL:\n        self.solverConfig.detailLevel = action.level;\n        break;\n\n      case actions.GO_FULL_SPEED:\n        self.solverConfig.evaluatingDetailLevel = 0;\n        self.solverConfig.fullSpeed = true;\n        break;\n\n      case actions.PAUSE:\n        self.solverConfig.paused = true;\n        break;\n\n      case actions.UNPAUSE:\n        self.solverConfig.paused = false;\n        break;\n\n      default:\n        throw new Error(`invalid action sent to solver ${action.type}`);\n    }\n  };\n};\n\nexport default makeSolver;\n","import gtmEmit from \"./emitCustomEvent\";\nexport const SET_VIEWPORT_STATE = \"SET_VIEWPORT_STATE\";\n\nexport const RESET_EVALUATING_STATE = \"RESET_EVALUATING_STATE\";\nexport const RESET_BEST_PATH_STATE = \"RESET_BEST_PATH_STATE\";\n\nexport const SET_ALGORITHM = \"SET_ALGORITHM\";\nexport const SET_DELAY = \"SET_DELAY\";\nexport const SET_EVALUATING_DETAIL_LEVEL = \"SET_EVALUATING_DETAIL_LEVEL\";\nexport const SET_SHOW_BEST_PATH = \"SET_SHOW_BEST_PATH\";\nexport const START_SOLVING = \"START_SOLVING\";\nexport const GO_FULL_SPEED = \"GO_FULL_SPEED\";\nexport const PAUSE = \"PAUSE\";\nexport const UNPAUSE = \"UNPAUSE\";\nexport const STOP_SOLVING = \"STOP_SOLVING\";\n\nexport const SET_BEST_PATH = \"SET_BEST_PATH\";\nexport const SET_EVALUATING_PATHS = \"SET_EVALUATING_PATHS\";\n\nexport const START_DEFINING_POINTS = \"START_DEFINING_POINTS\";\nexport const ADD_DEFINED_POINT = \"ADD_DEFINED_POINT\";\nexport const STOP_DEFINING_POINTS = \"STOP_DEFINING_POINTS\";\nexport const SET_POINT_COUNT = \"SET_POINT_COUNT\";\nexport const SET_POINTS = \"SET_POINTS\";\nexport const SET_DEFAULT_MAP = \"SET_DEFAULT_MAP\";\n\nexport const TOGGLE_SITE_INFO_OPEN = \"TOGGLE_SITE_INFO_OPEN\";\nexport const TOGGLE_ALG_INFO_OPEN = \"TOGGLE_ALG_INFO_OPEN\";\n\nconst getRandomPoint = (max, min) => Math.random() * (max - min) + min;\n\n//\n// BASIC UI\n//\nexport const toggleSiteInfoOpen = () => ({\n  type: TOGGLE_SITE_INFO_OPEN\n});\n\nexport const toggleAlgInfoOpen = () => ({\n  type: TOGGLE_ALG_INFO_OPEN\n});\n\n//\n// MAP INTERACTION\n//\nexport const setViewportState = viewport => ({\n  type: SET_VIEWPORT_STATE,\n  viewport\n});\n\n//\n// SOLVER CONTROLS\n//\nconst resetEvaluatingStateAction = () => ({\n  type: RESET_EVALUATING_STATE\n});\n\nconst resetBestPathStateAction = () => ({\n  type: RESET_BEST_PATH_STATE\n});\n\nconst setAlgorithmAction = (algorithm, defaults) => ({\n  type: SET_ALGORITHM,\n  algorithm,\n  defaults\n});\n\nexport const startSolvingAction = (points, delay, evaluatingDetailLevel) => ({\n  type: START_SOLVING,\n  points,\n  delay,\n  evaluatingDetailLevel,\n  fullSpeed: false\n});\n\nexport const stopSolvingAction = () => ({\n  type: STOP_SOLVING\n});\n\nexport const setAlgorithm = (algorithm, defaults = {}) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setAlgorithmAction(algorithm, defaults));\n};\n\nexport const setDelay = delay => ({\n  type: SET_DELAY,\n  delay\n});\n\nexport const setEvaluatingDetailLevel = level => ({\n  type: SET_EVALUATING_DETAIL_LEVEL,\n  level\n});\n\nexport const setShowBestPath = show => ({\n  type: SET_SHOW_BEST_PATH,\n  show\n});\n\nexport const resetSolverState = () => dispatch => {\n  dispatch(stopSolving());\n  dispatch(resetEvaluatingStateAction());\n  dispatch(resetBestPathStateAction());\n};\n\nexport const startSolving = (...args) => (dispatch, getState) => {\n  const { algorithm, pointCount } = getState();\n  gtmEmit({\n    event: \"start-solving\",\n    algorithm,\n    pointCount\n  });\n  dispatch(resetEvaluatingStateAction());\n  dispatch(startSolvingAction(...args));\n};\n\nexport const goFullSpeed = () => ({\n  type: GO_FULL_SPEED\n});\n\nexport const pause = () => ({\n  type: PAUSE\n});\n\nexport const unpause = () => ({\n  type: UNPAUSE\n});\n\nexport const stopSolving = () => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(stopSolvingAction());\n};\n\n//\n// SOLVER ACTIONS\n//\nexport const setEvaluatingPath = (path, cost) => ({\n  type: SET_EVALUATING_PATHS,\n  paths: [path],\n  cost\n});\n\nexport const setEvaluatingPaths = (paths, cost) => ({\n  type: SET_EVALUATING_PATHS,\n  paths,\n  cost\n});\n\nexport const setBestPath = (path, cost) => ({\n  type: SET_BEST_PATH,\n  path,\n  cost\n});\n\n//\n// POINT CONTROLS\n//\nconst setDefaultMapAction = () => ({\n  type: SET_DEFAULT_MAP\n});\n\nconst setPointsAction = points => ({\n  type: SET_POINTS,\n  points\n});\n\nconst setPointCountAction = count => ({\n  type: SET_POINT_COUNT,\n  count\n});\n\nconst startDefiningPointsAction = () => ({\n  type: START_DEFINING_POINTS\n});\n\nexport const startDefiningPoints = () => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(startDefiningPointsAction());\n};\n\nexport const addDefinedPoint = point => ({\n  type: ADD_DEFINED_POINT,\n  point\n});\n\nexport const stopDefiningPoints = () => ({\n  type: STOP_DEFINING_POINTS\n});\n\nexport const setPointCount = count => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(setPointCountAction(count));\n};\n\nexport const randomizePoints = bounds => (dispatch, getState) => {\n  const { pointCount } = getState();\n  const { top, bottom, left, right } = bounds;\n  const points = Array.from({ length: pointCount }).map(_ => [\n    getRandomPoint(right, left),\n    getRandomPoint(top, bottom)\n  ]);\n  dispatch(resetSolverState());\n  dispatch(setPointsAction(points));\n};\n\nexport const setDefaultMap = (...args) => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(setDefaultMapAction());\n};\n","export default ev => {\n  if (typeof window !== \"undefined\" && window.dataLayer) {\n    window.dataLayer.push(ev);\n  } else {\n    console.log(ev);\n  }\n};\n"],"sourceRoot":""}