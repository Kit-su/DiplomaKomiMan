!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s="7lWc")}({"7lWc":function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"SET_VIEWPORT_STATE",(function(){return s})),n.d(r,"RESET_EVALUATING_STATE",(function(){return i})),n.d(r,"RESET_BEST_PATH_STATE",(function(){return u})),n.d(r,"SET_ALGORITHM",(function(){return a})),n.d(r,"SET_DELAY",(function(){return l})),n.d(r,"SET_EVALUATING_DETAIL_LEVEL",(function(){return f})),n.d(r,"SET_SHOW_BEST_PATH",(function(){return c})),n.d(r,"START_SOLVING",(function(){return p})),n.d(r,"GO_FULL_SPEED",(function(){return d})),n.d(r,"PAUSE",(function(){return T})),n.d(r,"UNPAUSE",(function(){return E})),n.d(r,"STOP_SOLVING",(function(){return S})),n.d(r,"SET_BEST_PATH",(function(){return _})),n.d(r,"SET_EVALUATING_PATHS",(function(){return y})),n.d(r,"START_DEFINING_POINTS",(function(){return v})),n.d(r,"ADD_DEFINED_POINT",(function(){return g})),n.d(r,"STOP_DEFINING_POINTS",(function(){return P})),n.d(r,"SET_POINT_COUNT",(function(){return h})),n.d(r,"SET_POINTS",(function(){return A})),n.d(r,"SET_DEFAULT_MAP",(function(){return I})),n.d(r,"TOGGLE_SITE_INFO_OPEN",(function(){return O})),n.d(r,"TOGGLE_ALG_INFO_OPEN",(function(){return L})),n.d(r,"toggleSiteInfoOpen",(function(){return m})),n.d(r,"toggleAlgInfoOpen",(function(){return b})),n.d(r,"setViewportState",(function(){return D})),n.d(r,"startSolvingAction",(function(){return G})),n.d(r,"stopSolvingAction",(function(){return M})),n.d(r,"setAlgorithm",(function(){return C})),n.d(r,"setDelay",(function(){return U})),n.d(r,"setEvaluatingDetailLevel",(function(){return F})),n.d(r,"setShowBestPath",(function(){return V})),n.d(r,"resetSolverState",(function(){return H})),n.d(r,"startSolving",(function(){return R})),n.d(r,"goFullSpeed",(function(){return j})),n.d(r,"pause",(function(){return B})),n.d(r,"unpause",(function(){return k})),n.d(r,"stopSolving",(function(){return x})),n.d(r,"setEvaluatingPath",(function(){return W})),n.d(r,"setEvaluatingPaths",(function(){return Y})),n.d(r,"setBestPath",(function(){return z})),n.d(r,"startDefiningPoints",(function(){return $})),n.d(r,"addDefinedPoint",(function(){return q})),n.d(r,"stopDefiningPoints",(function(){return J})),n.d(r,"setPointCount",(function(){return K})),n.d(r,"randomizePoints",(function(){return Q})),n.d(r,"setDefaultMap",(function(){return X}));var o=t=>{"undefined"!=typeof window&&window.dataLayer?window.dataLayer.push(t):console.log(t)};const s="SET_VIEWPORT_STATE",i="RESET_EVALUATING_STATE",u="RESET_BEST_PATH_STATE",a="SET_ALGORITHM",l="SET_DELAY",f="SET_EVALUATING_DETAIL_LEVEL",c="SET_SHOW_BEST_PATH",p="START_SOLVING",d="GO_FULL_SPEED",T="PAUSE",E="UNPAUSE",S="STOP_SOLVING",_="SET_BEST_PATH",y="SET_EVALUATING_PATHS",v="START_DEFINING_POINTS",g="ADD_DEFINED_POINT",P="STOP_DEFINING_POINTS",h="SET_POINT_COUNT",A="SET_POINTS",I="SET_DEFAULT_MAP",O="TOGGLE_SITE_INFO_OPEN",L="TOGGLE_ALG_INFO_OPEN",N=(t,e)=>Math.random()*(t-e)+e,m=()=>({type:O}),b=()=>({type:L}),D=t=>({type:s,viewport:t}),w=()=>({type:i}),G=(t,e,n)=>({type:p,points:t,delay:e,evaluatingDetailLevel:n,fullSpeed:!1}),M=()=>({type:S}),C=function(t,e){return void 0===e&&(e={}),n=>{n(w()),n(((t,e)=>({type:a,algorithm:t,defaults:e}))(t,e))}},U=t=>({type:l,delay:t}),F=t=>({type:f,level:t}),V=t=>({type:c,show:t}),H=()=>t=>{t(x()),t(w()),t({type:u})},R=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return(t,n)=>{const{algorithm:r,pointCount:s}=n();o({event:"start-solving",algorithm:r,pointCount:s}),t(w()),t(G.apply(void 0,e))}},j=()=>({type:d}),B=()=>({type:T}),k=()=>({type:E}),x=()=>t=>{t(w()),t(M())},W=(t,e)=>({type:y,paths:[t],cost:e}),Y=(t,e)=>({type:y,paths:t,cost:e}),z=(t,e)=>({type:_,path:t,cost:e}),$=()=>t=>{t(H()),t({type:v})},q=t=>({type:g,point:t}),J=()=>({type:P}),K=t=>e=>{e(H()),e((t=>({type:h,count:t}))(t))},Q=t=>(e,n)=>{const{pointCount:r}=n(),{top:o,bottom:s,left:i,right:u}=t,a=Array.from({length:r}).map(t=>[N(u,i),N(o,s)]);e(H()),e((t=>({type:A,points:t}))(a))},X=function(){return t=>{t(H()),t({type:I})}};function Z(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function tt(t){return function(t){if(Array.isArray(t))return Z(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Z(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}const et=t=>t.slice(0,-1).map((e,n)=>((t,e)=>{const[n,r]=t,[o,s]=e;if(r===s&&n===o)return 0;var i=Math.PI*r/180,u=Math.PI*s/180,a=n-o,l=Math.PI*a/180,f=Math.sin(i)*Math.sin(u)+Math.cos(i)*Math.cos(u)*Math.cos(l);return f>1&&(f=1),60*(f=180*(f=Math.acos(f))/Math.PI)*1.1515*1.609344})(e,t[n+1])).reduce((t,e)=>t+e,0),nt=(t,e,n)=>(e[0]-t[0])*(n[1]-e[1])<(e[1]-t[1])*(n[0]-e[0]),rt=[255,87,34,225],ot=[180,180,180,240];(t=>{const e=(t=>async function(){await t.apply(void 0,arguments),self.postMessage(M())})(t);self.solverConfig={detailLevel:0,delay:10,fullSpeed:!1,paused:!1},self.setBestPath=function(){self.postMessage(z.apply(r,arguments))},self.setEvaluatingPaths=function(t,e){if(void 0===e&&(e=1),self.solverConfig.detailLevel>=e){const{paths:e,cost:n}=t();self.postMessage(Y(e,n))}},self.setEvaluatingPath=function(t,e){if(void 0===e&&(e=1),self.solverConfig.detailLevel>=e){const{path:e,cost:n}=t();self.postMessage(W(e,n))}},self.waitPause=async()=>{for(;self.solverConfig.paused;)await new Promise(t=>setTimeout(t,500))},self.sleep=async()=>{if(self.solverConfig.paused)return await self.waitPause();const t=self.solverConfig.fullSpeed?0:self.solverConfig.delay||10;return new Promise(e=>{setTimeout(e,t)})},self.onmessage=async t=>{let{data:n}=t;switch(n.type){case p:self.solverConfig.delay=n.delay,self.solverConfig.detailLevel=n.evaluatingDetailLevel,self.solverConfig.fullSpeed=n.fullSpeed,e(n.points);break;case l:self.solverConfig.delay=n.delay;break;case f:self.solverConfig.detailLevel=n.level;break;case d:self.solverConfig.evaluatingDetailLevel=0,self.solverConfig.fullSpeed=!0;break;case T:self.solverConfig.paused=!0;break;case E:self.solverConfig.paused=!1;break;default:throw new Error("invalid action sent to solver "+n.type)}}})(async t=>{const e=t[0];let n=t[0];for(const s of t)s[1]<n[1]&&(n=s);const r=[n];for(;;){const e=r[r.length-1];let[o,s]=[0,null];for(let[n,i]of t.entries())self.setEvaluatingPaths(()=>({paths:[{path:[...r,s||e],color:ot},{path:[e,i],color:rt}]}),2),await self.sleep(),s&&!nt(e,i,s)||([o,s]=[n,i]);if(t.splice(o,1),s===n)break;r.push(s)}for(self.setEvaluatingPaths(()=>({paths:[{path:r,color:rt}],cost:et(r)})),await self.sleep();t.length>0;){let[e,n,o]=[1/0,null,0];for(let[i,u]of t.entries()){let[t,s]=[1/0,0];for(let[e,n]of r.entries()){const o=r[(e+1)%r.length],i=et([n,u,o])-et([n,o]);i<t&&([t,s]=[i,e])}const a=r[(s+1)%r.length],l=et([r[s],a]),f=et([r[s],u,a])/l;f<e&&([e,n,o]=[f,i,s+1])}const[s]=t.splice(n,1);r.splice(o,0,s),self.setEvaluatingPaths(()=>({paths:[{path:r}],cost:et(r)})),await self.sleep()}((t,e)=>{const n=t.findIndex(t=>t===e);t.unshift.apply(t,tt(t.splice(n,t.length)))})(r,e),r.push(e);const o=et(r);self.setEvaluatingPaths(()=>({paths:[{path:r}],cost:o})),self.setBestPath(r,o)})}});
//# sourceMappingURL=18ce3098d0c3daadc76c.worker.js.map