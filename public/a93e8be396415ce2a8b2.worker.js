!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s="DgAR")}({DgAR:function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"SET_VIEWPORT_STATE",(function(){return u})),n.d(r,"RESET_EVALUATING_STATE",(function(){return i})),n.d(r,"RESET_BEST_PATH_STATE",(function(){return a})),n.d(r,"SET_ALGORITHM",(function(){return l})),n.d(r,"SET_DELAY",(function(){return s})),n.d(r,"SET_EVALUATING_DETAIL_LEVEL",(function(){return f})),n.d(r,"SET_SHOW_BEST_PATH",(function(){return c})),n.d(r,"START_SOLVING",(function(){return d})),n.d(r,"GO_FULL_SPEED",(function(){return p})),n.d(r,"PAUSE",(function(){return T})),n.d(r,"UNPAUSE",(function(){return E})),n.d(r,"STOP_SOLVING",(function(){return S})),n.d(r,"SET_BEST_PATH",(function(){return _})),n.d(r,"SET_EVALUATING_PATHS",(function(){return g})),n.d(r,"START_DEFINING_POINTS",(function(){return y})),n.d(r,"ADD_DEFINED_POINT",(function(){return h})),n.d(r,"STOP_DEFINING_POINTS",(function(){return v})),n.d(r,"SET_POINT_COUNT",(function(){return P})),n.d(r,"SET_POINTS",(function(){return A})),n.d(r,"SET_DEFAULT_MAP",(function(){return I})),n.d(r,"TOGGLE_SITE_INFO_OPEN",(function(){return O})),n.d(r,"TOGGLE_ALG_INFO_OPEN",(function(){return L})),n.d(r,"toggleSiteInfoOpen",(function(){return m})),n.d(r,"toggleAlgInfoOpen",(function(){return D})),n.d(r,"setViewportState",(function(){return M})),n.d(r,"startSolvingAction",(function(){return G})),n.d(r,"stopSolvingAction",(function(){return w})),n.d(r,"setAlgorithm",(function(){return C})),n.d(r,"setDelay",(function(){return U})),n.d(r,"setEvaluatingDetailLevel",(function(){return F})),n.d(r,"setShowBestPath",(function(){return V})),n.d(r,"resetSolverState",(function(){return R})),n.d(r,"startSolving",(function(){return H})),n.d(r,"goFullSpeed",(function(){return B})),n.d(r,"pause",(function(){return j})),n.d(r,"unpause",(function(){return x})),n.d(r,"stopSolving",(function(){return k})),n.d(r,"setEvaluatingPath",(function(){return W})),n.d(r,"setEvaluatingPaths",(function(){return Y})),n.d(r,"setBestPath",(function(){return z})),n.d(r,"startDefiningPoints",(function(){return $})),n.d(r,"addDefinedPoint",(function(){return q})),n.d(r,"stopDefiningPoints",(function(){return J})),n.d(r,"setPointCount",(function(){return K})),n.d(r,"randomizePoints",(function(){return Q})),n.d(r,"setDefaultMap",(function(){return X}));var o=t=>{"undefined"!=typeof window&&window.dataLayer?window.dataLayer.push(t):console.log(t)};const u="SET_VIEWPORT_STATE",i="RESET_EVALUATING_STATE",a="RESET_BEST_PATH_STATE",l="SET_ALGORITHM",s="SET_DELAY",f="SET_EVALUATING_DETAIL_LEVEL",c="SET_SHOW_BEST_PATH",d="START_SOLVING",p="GO_FULL_SPEED",T="PAUSE",E="UNPAUSE",S="STOP_SOLVING",_="SET_BEST_PATH",g="SET_EVALUATING_PATHS",y="START_DEFINING_POINTS",h="ADD_DEFINED_POINT",v="STOP_DEFINING_POINTS",P="SET_POINT_COUNT",A="SET_POINTS",I="SET_DEFAULT_MAP",O="TOGGLE_SITE_INFO_OPEN",L="TOGGLE_ALG_INFO_OPEN",N=(t,e)=>Math.random()*(t-e)+e,m=()=>({type:O}),D=()=>({type:L}),M=t=>({type:u,viewport:t}),b=()=>({type:i}),G=(t,e,n)=>({type:d,points:t,delay:e,evaluatingDetailLevel:n,fullSpeed:!1}),w=()=>({type:S}),C=function(t,e){return void 0===e&&(e={}),n=>{n(b()),n(((t,e)=>({type:l,algorithm:t,defaults:e}))(t,e))}},U=t=>({type:s,delay:t}),F=t=>({type:f,level:t}),V=t=>({type:c,show:t}),R=()=>t=>{t(k()),t(b()),t({type:a})},H=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return(t,n)=>{const{algorithm:r,pointCount:u}=n();o({event:"start-solving",algorithm:r,pointCount:u}),t(b()),t(G.apply(void 0,e))}},B=()=>({type:p}),j=()=>({type:T}),x=()=>({type:E}),k=()=>t=>{t(b()),t(w())},W=(t,e)=>({type:g,paths:[t],cost:e}),Y=(t,e)=>({type:g,paths:t,cost:e}),z=(t,e)=>({type:_,path:t,cost:e}),$=()=>t=>{t(R()),t({type:y})},q=t=>({type:h,point:t}),J=()=>({type:v}),K=t=>e=>{e(R()),e((t=>({type:P,count:t}))(t))},Q=t=>(e,n)=>{const{pointCount:r}=n(),{top:o,bottom:u,left:i,right:a}=t,l=Array.from({length:r}).map(t=>[N(a,i),N(o,u)]);e(R()),e((t=>({type:A,points:t}))(l))},X=function(){return t=>{t(R()),t({type:I})}};function Z(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function tt(t){return function(t){if(Array.isArray(t))return Z(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Z(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}const et=(t,e)=>{const[n,r]=t,[o,u]=e;if(r===u&&n===o)return 0;var i=Math.PI*r/180,a=Math.PI*u/180,l=n-o,s=Math.PI*l/180,f=Math.sin(i)*Math.sin(a)+Math.cos(i)*Math.cos(a)*Math.cos(s);return f>1&&(f=1),60*(f=180*(f=Math.acos(f))/Math.PI)*1.1515*1.609344},nt=t=>t.slice(0,-1).map((e,n)=>et(e,t[n+1])).reduce((t,e)=>t+e,0),rt=[255,87,34,225];(t=>{const e=(t=>async function(){await t.apply(void 0,arguments),self.postMessage(w())})(t);self.solverConfig={detailLevel:0,delay:10,fullSpeed:!1,paused:!1},self.setBestPath=function(){self.postMessage(z.apply(r,arguments))},self.setEvaluatingPaths=function(t,e){if(void 0===e&&(e=1),self.solverConfig.detailLevel>=e){const{paths:e,cost:n}=t();self.postMessage(Y(e,n))}},self.setEvaluatingPath=function(t,e){if(void 0===e&&(e=1),self.solverConfig.detailLevel>=e){const{path:e,cost:n}=t();self.postMessage(W(e,n))}},self.waitPause=async()=>{for(;self.solverConfig.paused;)await new Promise(t=>setTimeout(t,500))},self.sleep=async()=>{if(self.solverConfig.paused)return await self.waitPause();const t=self.solverConfig.fullSpeed?0:self.solverConfig.delay||10;return new Promise(e=>{setTimeout(e,t)})},self.onmessage=async t=>{let{data:n}=t;switch(n.type){case d:self.solverConfig.delay=n.delay,self.solverConfig.detailLevel=n.evaluatingDetailLevel,self.solverConfig.fullSpeed=n.fullSpeed,e(n.points);break;case s:self.solverConfig.delay=n.delay;break;case f:self.solverConfig.detailLevel=n.level;break;case p:self.solverConfig.evaluatingDetailLevel=0,self.solverConfig.fullSpeed=!0;break;case T:self.solverConfig.paused=!0;break;case E:self.solverConfig.paused=!1;break;default:throw new Error("invalid action sent to solver "+n.type)}}})(async t=>{const e=t[0],n=t,r=n.length<10?.9999:n.length<15?.99999:n.length<30?.999999:1-5e-7,o=t=>{const e=1+Math.floor(Math.random()*(n.length-1)),r=1+Math.floor(Math.random()*(n.length-1)),o=((t,e)=>{const r=(t-1+n.length)%n.length,o=(t+1+n.length)%n.length,u=(e-1+n.length)%n.length,i=(e+1+n.length)%n.length;let a=et(n[u],n[t])+et(n[t],n[i])+et(n[r],n[e])+et(n[e],n[o])-et(n[r],n[t])-et(n[t],n[o])-et(n[u],n[e])-et(n[e],n[i]);return u!==t&&i!==t||(a+=2*et(n[t],n[e])),a})(e,r);(o<0||Math.random()<Math.exp(-o/t))&&([n[e],n[r]]=[n[r],n[e]])};let u=0;for(let a=100*et(n[0],n[1]);a>1e-6;a*=r)o(a),u%1e4==0&&(self.setEvaluatingPaths(()=>({paths:[{path:n,color:rt}],cost:nt(n)})),await self.sleep()),u%1e5==0&&(n.push(e),self.setBestPath(n,nt(n)),n.pop()),u++;((t,e)=>{const n=t.findIndex(t=>t===e);t.unshift.apply(t,tt(t.splice(n,t.length)))})(n,e),n.push(e);const i=nt(n);self.setEvaluatingPaths(()=>({paths:[{path:n}],cost:i})),self.setBestPath(n,i)})}});
//# sourceMappingURL=a93e8be396415ce2a8b2.worker.js.map