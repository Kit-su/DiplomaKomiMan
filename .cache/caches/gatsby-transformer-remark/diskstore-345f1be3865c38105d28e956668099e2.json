{"expireTime":9007200971572806000,"key":"transformer-remark-markdown-html-ast-77a03eebe4eaea9593e4d9fbbc4da370-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Nearest Neighbor","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":19,"offset":19}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":19,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a heuristic, greedy algorithm also known as nearest neighbor. It continually chooses the best looking option from the current state.","position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":141,"offset":161}}}],"position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":141,"offset":161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"From the starting point","position":{"start":{"line":6,"column":4,"offset":166},"end":{"line":6,"column":27,"offset":189}}}],"position":{"start":{"line":6,"column":1,"offset":163},"end":{"line":6,"column":27,"offset":189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"sort the remaining available points based on cost (distance)","position":{"start":{"line":7,"column":4,"offset":193},"end":{"line":7,"column":64,"offset":253}}}],"position":{"start":{"line":7,"column":1,"offset":190},"end":{"line":7,"column":64,"offset":253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Choose the closest point and go there","position":{"start":{"line":8,"column":4,"offset":257},"end":{"line":8,"column":41,"offset":294}}}],"position":{"start":{"line":8,"column":1,"offset":254},"end":{"line":8,"column":41,"offset":294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Chosen point is no longer an \"available point\"","position":{"start":{"line":9,"column":4,"offset":298},"end":{"line":9,"column":50,"offset":344}}}],"position":{"start":{"line":9,"column":1,"offset":295},"end":{"line":9,"column":50,"offset":344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Continue this way until there are no available points, and then return to the start.","position":{"start":{"line":10,"column":4,"offset":348},"end":{"line":10,"column":88,"offset":432}}}],"position":{"start":{"line":10,"column":1,"offset":345},"end":{"line":10,"column":88,"offset":432}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":163},"end":{"line":10,"column":88,"offset":432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Implementation","position":{"start":{"line":12,"column":4,"offset":437},"end":{"line":12,"column":18,"offset":451}}}],"position":{"start":{"line":12,"column":1,"offset":434},"end":{"line":12,"column":18,"offset":451}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nearestNeighbor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">points</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>points<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// sort remaining points in place by their</span>\n    <span class=\"token comment\">// distance from the last point in the current path</span>\n    points<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// go to the closest remaining point</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// return to start after visiting all other points</span>\n  path<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cost <span class=\"token operator\">=</span> <span class=\"token function\">pathCost</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":14,"column":1,"offset":453},"end":{"line":34,"column":4,"offset":984}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":1,"offset":985}}}}